from fastapi import FastAPI, Request
from dotenv import load_dotenv
import os
import datetime
import asyncio
import boto3

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
S3_ENDPOINT = os.getenv("S3_ENDPOINT")
S3_BUCKET = os.getenv("S3_BUCKET")
S3_ACCESS_KEY = os.getenv("S3_ACCESS_KEY")
S3_SECRET_KEY = os.getenv("S3_SECRET_KEY")

DATA_DIR = "/opt/leads_postback/data"
os.makedirs(DATA_DIR, exist_ok=True)

app = FastAPI()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è S3
s3 = boto3.client(
    "s3",
    endpoint_url=S3_ENDPOINT,
    aws_access_key_id=S3_ACCESS_KEY,
    aws_secret_access_key=S3_SECRET_KEY,
)

def get_today_filename():
    today = datetime.datetime.now().strftime("%d.%m.%Y")
    return os.path.join(DATA_DIR, f"leads_sub6_{today}.txt")

@app.post("/postback")
async def receive_postback(request: Request):
    params = dict(request.query_params)
    sub6 = params.get("sub6")
    if sub6:
        filename = get_today_filename()
        with open(filename, "a") as f:
            f.write(f"{sub6}\n")
        print(f"[+] –ü–æ–ª—É—á–µ–Ω sub6: {sub6}")
    return {"status": "ok"}

async def upload_and_rotate():
    """–ö–∞–∂–¥—É—é –Ω–æ—á—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –≤ S3 –∏ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π"""
    while True:
        now = datetime.datetime.now()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω–æ—á—å –ø–æ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ (–ª—É—á—à–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å UTC+3)
        if now.hour == 0 and now.minute == 0:
            today = now.strftime("%d.%m.%Y")
            filename = os.path.join(DATA_DIR, f"leads_sub6_{today}.txt")

            if os.path.exists(filename):
                s3_key = f"leads_sub6_{today}.txt"
                try:
                    s3.upload_file(filename, S3_BUCKET, s3_key)
                    print(f"[‚úÖ] –§–∞–π–ª {filename} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ S3 –∫–∞–∫ {s3_key}")
                except Exception as e:
                    print(f"[‚ùå] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤ S3: {e}")
            else:
                print("[‚ÑπÔ∏è] –§–∞–π–ª –∑–∞ –¥–µ–Ω—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

            # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
            tomorrow = (now + datetime.timedelta(days=1)).strftime("%d.%m.%Y")
            new_file = os.path.join(DATA_DIR, f"leads_sub6_{tomorrow}.txt")
            open(new_file, "a").close()
            print(f"[üÜï] –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –Ω–∞ –∑–∞–≤—Ç—Ä–∞: {new_file}")

            await asyncio.sleep(60)  # —á—Ç–æ–±—ã –Ω–µ –∑–∞—Ü–∏–∫–ª–∏–ª–æ—Å—å –Ω–∞ —Ç–æ–π –∂–µ –º–∏–Ω—É—Ç–µ
        await asyncio.sleep(30)

@app.on_event("startup")
async def on_startup():
    asyncio.create_task(upload_and_rotate())

@app.get("/")
async def root():
    return {"status": "running"}
